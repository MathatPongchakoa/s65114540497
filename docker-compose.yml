services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 3s
      timeout: 3s
      retries: 20

  web:
    build: .
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - default
      - traefik-public
    labels:
      - "traefik.enable=true"
      
      # --- 1. Router (ไม่มี middleware แล้ว) ---
      # กำหนด Rule ให้ตรงกับ prefix ที่ตั้งใน urls.py
      - "traefik.http.routers.s65114540497-app.rule=PathPrefix(`/s65114540497`)"
      - "traefik.http.routers.s65114540497-app.service=s65114540497-service"
      - "traefik.http.routers.s65114540497-app.entrypoints=web"

      # --- 2. Service ปลายทาง ---
      - "traefik.http.services.s65114540497-service.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-public"

volumes:
  pgdata:

networks:
  default:
  traefik-public:
    external: true